

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri May 01 16:00:59 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4520 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	nvCOMRAM
    53  000007                     __pnvCOMRAM:
    54                           	opt callstack 0
    55  000007                     _lcd:
    56                           	opt callstack 0
    57  000007                     	ds	2
    58  0000                     _TRISD	set	3989
    59  0000                     _ADCON1	set	4033
    60  0000                     _PORTD	set	3971
    61                           
    62                           ; #config settings
    63  0000                     
    64                           	psect	cinit
    65  007B44                     __pcinit:
    66                           	opt callstack 0
    67  007B44                     start_initialization:
    68                           	opt callstack 0
    69  007B44                     __initialization:
    70                           	opt callstack 0
    71  007B44                     end_of_initialization:
    72                           	opt callstack 0
    73  007B44                     __end_of__initialization:
    74                           	opt callstack 0
    75  007B44  0100               	movlb	0
    76  007B46  EFAA  F03D         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	opt callstack 0
    81  000001                     ??_write_char:
    82  000001                     function_set@num_lines:
    83                           	opt callstack 0
    84  000001                     display_onoff_control@cursor_on:
    85                           	opt callstack 0
    86  000001                     entry_mode_set@display_shift:
    87                           	opt callstack 0
    88                           
    89                           ; 1 bytes @ 0x0
    90  000001                     	ds	1
    91  000002                     ??_entry_mode_set:
    92  000002                     function_set@char_font:
    93                           	opt callstack 0
    94  000002                     display_onoff_control@blink:
    95                           	opt callstack 0
    96  000002                     write_char@c:
    97                           	opt callstack 0
    98                           
    99                           ; 1 bytes @ 0x1
   100  000002                     	ds	1
   101  000003                     ??_function_set:
   102  000003                     ??_display_onoff_control:
   103  000003                     entry_mode_set@move_direction:
   104                           	opt callstack 0
   105                           
   106                           ; 1 bytes @ 0x2
   107  000003                     	ds	2
   108  000005                     display_onoff_control@display_on:
   109                           	opt callstack 0
   110                           
   111                           ; 1 bytes @ 0x4
   112  000005                     	ds	1
   113  000006                     function_set@data_lenght:
   114                           	opt callstack 0
   115                           
   116                           ; 1 bytes @ 0x5
   117  000006                     	ds	1
   118  000007                     
   119                           ; 1 bytes @ 0x6
   120 ;;
   121 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   122 ;;
   123 ;; *************** function _main *****************
   124 ;; Defined at:
   125 ;;		line 34 in file "main.c"
   126 ;; Parameters:    Size  Location     Type
   127 ;;		None
   128 ;; Auto vars:     Size  Location     Type
   129 ;;		None
   130 ;; Return value:  Size  Location     Type
   131 ;;                  1    wreg      void 
   132 ;; Registers used:
   133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   134 ;; Tracked objects:
   135 ;;		On entry : 0/0
   136 ;;		On exit  : 0/0
   137 ;;		Unchanged: 0/0
   138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   139 ;;      Params:         0       0       0       0       0       0       0
   140 ;;      Locals:         0       0       0       0       0       0       0
   141 ;;      Temps:          0       0       0       0       0       0       0
   142 ;;      Totals:         0       0       0       0       0       0       0
   143 ;;Total ram usage:        0 bytes
   144 ;; Hardware stack levels required when called:    1
   145 ;; This function calls:
   146 ;;		_display_onoff_control
   147 ;;		_entry_mode_set
   148 ;;		_function_set
   149 ;;		_init_lcd
   150 ;;		_write_char
   151 ;; This function is called by:
   152 ;;		Startup code after reset
   153 ;; This function uses a non-reentrant model
   154 ;;
   155                           
   156                           	psect	text0
   157  007B54                     __ptext0:
   158                           	opt callstack 0
   159  007B54                     _main:
   160                           	opt callstack 30
   161  007B54                     
   162                           ;main.c: 35:     write_char('O');
   163  007B54  0E0F               	movlw	15
   164  007B56  6EC1               	movwf	193,c	;volatile
   165                           
   166                           ;main.c: 36:     write_char(' ');
   167  007B58  0E00               	movlw	0
   168  007B5A  6E95               	movwf	149,c	;volatile
   169  007B5C                     
   170                           ;main.c: 38:     write_char('O');
   171  007B5C  ECA5  F03D         	call	_init_lcd	;wreg free
   172  007B60                     
   173                           ;main.c: 40:     write_char('L');
   174  007B60  0E00               	movlw	0
   175  007B62  6E01               	movwf	function_set@num_lines^0,c
   176  007B64  0E00               	movlw	0
   177  007B66  6E02               	movwf	function_set@char_font^0,c
   178  007B68  0E00               	movlw	0
   179  007B6A  EC4A  F03F         	call	_function_set
   180  007B6E                     
   181                           ;main.c: 41:     write_char('D');
   182  007B6E  0E01               	movlw	1
   183  007B70  6E01               	movwf	display_onoff_control@cursor_on^0,c
   184  007B72  0E00               	movlw	0
   185  007B74  6E02               	movwf	display_onoff_control@blink^0,c
   186  007B76  0E01               	movlw	1
   187  007B78  EC59  F03E         	call	_display_onoff_control
   188  007B7C                     
   189                           ;main.c: 42: 
   190  007B7C  0E00               	movlw	0
   191  007B7E  6E01               	movwf	entry_mode_set@display_shift^0,c
   192  007B80  0E01               	movlw	1
   193  007B82  ECE8  F03D         	call	_entry_mode_set
   194  007B86                     
   195                           ;main.c: 44:     while(1){
   196  007B86  0E48               	movlw	72
   197  007B88  ECCF  F03E         	call	_write_char
   198  007B8C                     
   199                           ;main.c: 45: 
   200  007B8C  0E45               	movlw	69
   201  007B8E  ECCF  F03E         	call	_write_char
   202  007B92                     
   203                           ;main.c: 46:     }
   204  007B92  0E4C               	movlw	76
   205  007B94  ECCF  F03E         	call	_write_char
   206  007B98                     
   207                           ;main.c: 47: 
   208  007B98  0E4C               	movlw	76
   209  007B9A  ECCF  F03E         	call	_write_char
   210  007B9E                     
   211                           ;main.c: 48: }
   212  007B9E  0E4F               	movlw	79
   213  007BA0  ECCF  F03E         	call	_write_char
   214  007BA4                     
   215                           ;main.c: 49: 
   216  007BA4  0E20               	movlw	32
   217  007BA6  ECCF  F03E         	call	_write_char
   218  007BAA                     
   219                           ;main.c: 50: 
   220  007BAA  0E57               	movlw	87
   221  007BAC  ECCF  F03E         	call	_write_char
   222  007BB0                     
   223                           ;main.c: 51: void function_set(char data_lenght, char num_lines, char char_font){
   224  007BB0  0E4F               	movlw	79
   225  007BB2  ECCF  F03E         	call	_write_char
   226  007BB6                     
   227                           ;main.c: 52:     lcd->E = 0;
   228  007BB6  0E52               	movlw	82
   229  007BB8  ECCF  F03E         	call	_write_char
   230  007BBC                     
   231                           ;main.c: 53:     lcd->RS = 0;
   232  007BBC  0E4C               	movlw	76
   233  007BBE  ECCF  F03E         	call	_write_char
   234  007BC2                     
   235                           ;main.c: 54:     lcd->R_W = 0;
   236  007BC2  0E44               	movlw	68
   237  007BC4  ECCF  F03E         	call	_write_char
   238  007BC8                     l25:
   239  007BC8  EFE4  F03D         	goto	l25
   240  007BCC  EF00  F000         	goto	start
   241  007BD0                     __end_of_main:
   242                           	opt callstack 0
   243                           
   244 ;; *************** function _write_char *****************
   245 ;; Defined at:
   246 ;;		line 184 in file "main.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;  c               1    wreg     unsigned char 
   249 ;; Auto vars:     Size  Location     Type
   250 ;;  c               1    1[COMRAM] unsigned char 
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   260 ;;      Params:         0       0       0       0       0       0       0
   261 ;;      Locals:         1       0       0       0       0       0       0
   262 ;;      Temps:          1       0       0       0       0       0       0
   263 ;;      Totals:         2       0       0       0       0       0       0
   264 ;;Total ram usage:        2 bytes
   265 ;; Hardware stack levels used:    1
   266 ;; This function calls:
   267 ;;		Nothing
   268 ;; This function is called by:
   269 ;;		_main
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	text1
   274  007D9E                     __ptext1:
   275                           	opt callstack 0
   276  007D9E                     _write_char:
   277                           	opt callstack 30
   278                           
   279                           ;incstack = 0
   280                           ;write_char@c stored from wreg
   281  007D9E  6E02               	movwf	write_char@c^0,c
   282  007DA0                     
   283                           ;main.c: 185:     lcd->E = 0;
   284  007DA0  C007  FFD9         	movff	_lcd,fsr2l
   285  007DA4  C008  FFDA         	movff	_lcd+1,fsr2h
   286  007DA8  94DF               	bcf	indf2,2,c
   287                           
   288                           ;main.c: 186:     _delay((unsigned long)((5)*(16000000/4000.0)));
   289  007DAA  C007  FFD9         	movff	_lcd,fsr2l
   290  007DAE  C008  FFDA         	movff	_lcd+1,fsr2h
   291  007DB2  80DF               	bsf	indf2,0,c
   292                           
   293                           ;main.c: 187: 
   294  007DB4  C007  FFD9         	movff	_lcd,fsr2l
   295  007DB8  C008  FFDA         	movff	_lcd+1,fsr2h
   296  007DBC  92DF               	bcf	indf2,1,c
   297  007DBE                     
   298                           ;main.c: 190:     _delay((unsigned long)((1)*(16000000/4000.0)));
   299  007DBE  C002  F001         	movff	write_char@c,??_write_char
   300  007DC2  3A01               	swapf	??_write_char^0,f,c
   301  007DC4  0E0F               	movlw	15
   302  007DC6  1601               	andwf	??_write_char^0,f,c
   303  007DC8  C007  FFD9         	movff	_lcd,fsr2l
   304  007DCC  C008  FFDA         	movff	_lcd+1,fsr2h
   305  007DD0  3A01               	swapf	??_write_char^0,f,c
   306  007DD2  50DF               	movf	indf2,w,c
   307  007DD4  1801               	xorwf	??_write_char^0,w,c
   308  007DD6  0B0F               	andlw	-241
   309  007DD8  1801               	xorwf	??_write_char^0,w,c
   310  007DDA  6EDF               	movwf	indf2,c
   311  007DDC                     
   312                           ;main.c: 191: 
   313  007DDC  0E06               	movlw	6
   314  007DDE  6E01               	movwf	??_write_char^0,c
   315  007DE0  0E30               	movlw	48
   316  007DE2                     u17:
   317  007DE2  2EE8               	decfsz	wreg,f,c
   318  007DE4  D7FE               	bra	u17
   319  007DE6  2E01               	decfsz	??_write_char^0,f,c
   320  007DE8  D7FC               	bra	u17
   321  007DEA  D000               	nop2	
   322  007DEC                     
   323                           ;main.c: 194:     _delay((unsigned long)((1)*(16000000/4000.0)));
   324  007DEC  C007  FFD9         	movff	_lcd,fsr2l
   325  007DF0  C008  FFDA         	movff	_lcd+1,fsr2h
   326  007DF4  84DF               	bsf	indf2,2,c
   327  007DF6                     
   328                           ;main.c: 195: 
   329  007DF6  0E06               	movlw	6
   330  007DF8  6E01               	movwf	??_write_char^0,c
   331  007DFA  0E30               	movlw	48
   332  007DFC                     u27:
   333  007DFC  2EE8               	decfsz	wreg,f,c
   334  007DFE  D7FE               	bra	u27
   335  007E00  2E01               	decfsz	??_write_char^0,f,c
   336  007E02  D7FC               	bra	u27
   337  007E04  D000               	nop2	
   338  007E06                     
   339                           ;main.c: 198:     lcd->RS = 0;
   340  007E06  C007  FFD9         	movff	_lcd,fsr2l
   341  007E0A  C008  FFDA         	movff	_lcd+1,fsr2h
   342  007E0E  94DF               	bcf	indf2,2,c
   343  007E10                     
   344                           ;main.c: 199:     lcd->data = 0x00;
   345  007E10  0E1A               	movlw	26
   346  007E12  6E01               	movwf	??_write_char^0,c
   347  007E14  0EF8               	movlw	248
   348  007E16                     u37:
   349  007E16  2EE8               	decfsz	wreg,f,c
   350  007E18  D7FE               	bra	u37
   351  007E1A  2E01               	decfsz	??_write_char^0,f,c
   352  007E1C  D7FC               	bra	u37
   353  007E1E  D000               	nop2	
   354  007E20  C002  F001         	movff	write_char@c,??_write_char
   355  007E24  C007  FFD9         	movff	_lcd,fsr2l
   356  007E28  C008  FFDA         	movff	_lcd+1,fsr2h
   357  007E2C  3A01               	swapf	??_write_char^0,f,c
   358  007E2E  50DF               	movf	indf2,w,c
   359  007E30  1801               	xorwf	??_write_char^0,w,c
   360  007E32  0B0F               	andlw	-241
   361  007E34  1801               	xorwf	??_write_char^0,w,c
   362  007E36  6EDF               	movwf	indf2,c
   363  007E38  0E06               	movlw	6
   364  007E3A  6E01               	movwf	??_write_char^0,c
   365  007E3C  0E30               	movlw	48
   366  007E3E                     u47:
   367  007E3E  2EE8               	decfsz	wreg,f,c
   368  007E40  D7FE               	bra	u47
   369  007E42  2E01               	decfsz	??_write_char^0,f,c
   370  007E44  D7FC               	bra	u47
   371  007E46  D000               	nop2	
   372  007E48  C007  FFD9         	movff	_lcd,fsr2l
   373  007E4C  C008  FFDA         	movff	_lcd+1,fsr2h
   374  007E50  84DF               	bsf	indf2,2,c
   375  007E52  0E06               	movlw	6
   376  007E54  6E01               	movwf	??_write_char^0,c
   377  007E56  0E30               	movlw	48
   378  007E58                     u57:
   379  007E58  2EE8               	decfsz	wreg,f,c
   380  007E5A  D7FE               	bra	u57
   381  007E5C  2E01               	decfsz	??_write_char^0,f,c
   382  007E5E  D7FC               	bra	u57
   383  007E60  D000               	nop2	
   384  007E62  C007  FFD9         	movff	_lcd,fsr2l
   385  007E66  C008  FFDA         	movff	_lcd+1,fsr2h
   386  007E6A  94DF               	bcf	indf2,2,c
   387  007E6C  C007  FFD9         	movff	_lcd,fsr2l
   388  007E70  C008  FFDA         	movff	_lcd+1,fsr2h
   389  007E74  90DF               	bcf	indf2,0,c
   390  007E76  C007  FFD9         	movff	_lcd,fsr2l
   391  007E7A  C008  FFDA         	movff	_lcd+1,fsr2h
   392  007E7E  0E0F               	movlw	-241
   393  007E80  16DF               	andwf	indf2,f,c
   394  007E82  0E1A               	movlw	26
   395  007E84  6E01               	movwf	??_write_char^0,c
   396  007E86  0EF8               	movlw	248
   397  007E88                     u67:
   398  007E88  2EE8               	decfsz	wreg,f,c
   399  007E8A  D7FE               	bra	u67
   400  007E8C  2E01               	decfsz	??_write_char^0,f,c
   401  007E8E  D7FC               	bra	u67
   402  007E90  D000               	nop2	
   403  007E92  0012               	return		;funcret
   404  007E94                     __end_of_write_char:
   405                           	opt callstack 0
   406                           
   407 ;; *************** function _init_lcd *****************
   408 ;; Defined at:
   409 ;;		line 176 in file "main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, status,2, status,0
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   423 ;;      Params:         0       0       0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0       0       0
   426 ;;      Totals:         0       0       0       0       0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels used:    1
   429 ;; This function calls:
   430 ;;		Nothing
   431 ;; This function is called by:
   432 ;;		_main
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text2
   437  007B4A                     __ptext2:
   438                           	opt callstack 0
   439  007B4A                     _init_lcd:
   440                           	opt callstack 30
   441  007B4A                     
   442                           ;main.c: 177:     lcd->data = (c>>4);
   443  007B4A  0E83               	movlw	131
   444  007B4C  6E07               	movwf	_lcd^0,c
   445  007B4E  0E0F               	movlw	15
   446  007B50  6E08               	movwf	(_lcd+1)^0,c
   447  007B52  0012               	return		;funcret
   448  007B54                     __end_of_init_lcd:
   449                           	opt callstack 0
   450                           
   451 ;; *************** function _function_set *****************
   452 ;; Defined at:
   453 ;;		line 64 in file "main.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;  data_lenght     1    wreg     unsigned char 
   456 ;;  num_lines       1    0[COMRAM] unsigned char 
   457 ;;  char_font       1    1[COMRAM] unsigned char 
   458 ;; Auto vars:     Size  Location     Type
   459 ;;  data_lenght     1    5[COMRAM] unsigned char 
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   469 ;;      Params:         2       0       0       0       0       0       0
   470 ;;      Locals:         1       0       0       0       0       0       0
   471 ;;      Temps:          3       0       0       0       0       0       0
   472 ;;      Totals:         6       0       0       0       0       0       0
   473 ;;Total ram usage:        6 bytes
   474 ;; Hardware stack levels used:    1
   475 ;; This function calls:
   476 ;;		Nothing
   477 ;; This function is called by:
   478 ;;		_main
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           	psect	text3
   483  007E94                     __ptext3:
   484                           	opt callstack 0
   485  007E94                     _function_set:
   486                           	opt callstack 30
   487                           
   488                           ;incstack = 0
   489                           ;function_set@data_lenght stored from wreg
   490  007E94  6E06               	movwf	function_set@data_lenght^0,c
   491  007E96                     
   492                           ;main.c: 65:     lcd->E = 0;
   493  007E96  C007  FFD9         	movff	_lcd,fsr2l
   494  007E9A  C008  FFDA         	movff	_lcd+1,fsr2h
   495  007E9E  94DF               	bcf	indf2,2,c
   496                           
   497                           ;main.c: 66:     _delay((unsigned long)((5)*(16000000/4000.0)));
   498  007EA0  C007  FFD9         	movff	_lcd,fsr2l
   499  007EA4  C008  FFDA         	movff	_lcd+1,fsr2h
   500  007EA8  90DF               	bcf	indf2,0,c
   501                           
   502                           ;main.c: 67: 
   503  007EAA  C007  FFD9         	movff	_lcd,fsr2l
   504  007EAE  C008  FFDA         	movff	_lcd+1,fsr2h
   505  007EB2  92DF               	bcf	indf2,1,c
   506  007EB4                     
   507                           ;main.c: 70:     lcd->data = 0x02|data_lenght;
   508  007EB4  C007  FFD9         	movff	_lcd,fsr2l
   509  007EB8  C008  FFDA         	movff	_lcd+1,fsr2h
   510  007EBC  50DF               	movf	indf2,w,c
   511  007EBE  0B0F               	andlw	-241
   512  007EC0  0920               	iorlw	32
   513  007EC2  6EDF               	movwf	indf2,c
   514  007EC4                     
   515                           ;main.c: 71:     _delay((unsigned long)((1)*(16000000/4000.0)));
   516  007EC4  0E06               	movlw	6
   517  007EC6  6E03               	movwf	??_function_set^0,c
   518  007EC8  0E30               	movlw	48
   519  007ECA                     u77:
   520  007ECA  2EE8               	decfsz	wreg,f,c
   521  007ECC  D7FE               	bra	u77
   522  007ECE  2E03               	decfsz	??_function_set^0,f,c
   523  007ED0  D7FC               	bra	u77
   524  007ED2  D000               	nop2	
   525  007ED4                     
   526                           ;main.c: 74:     lcd->E = 1;
   527  007ED4  C007  FFD9         	movff	_lcd,fsr2l
   528  007ED8  C008  FFDA         	movff	_lcd+1,fsr2h
   529  007EDC  84DF               	bsf	indf2,2,c
   530  007EDE                     
   531                           ;main.c: 75:     _delay((unsigned long)((1)*(16000000/4000.0)));
   532  007EDE  0E06               	movlw	6
   533  007EE0  6E03               	movwf	??_function_set^0,c
   534  007EE2  0E30               	movlw	48
   535  007EE4                     u87:
   536  007EE4  2EE8               	decfsz	wreg,f,c
   537  007EE6  D7FE               	bra	u87
   538  007EE8  2E03               	decfsz	??_function_set^0,f,c
   539  007EEA  D7FC               	bra	u87
   540  007EEC  D000               	nop2	
   541  007EEE                     
   542                           ;main.c: 78:     lcd->E = 0;
   543  007EEE  C007  FFD9         	movff	_lcd,fsr2l
   544  007EF2  C008  FFDA         	movff	_lcd+1,fsr2h
   545  007EF6  94DF               	bcf	indf2,2,c
   546  007EF8                     
   547                           ;main.c: 79:     _delay((unsigned long)((5)*(16000000/4000.0)));
   548  007EF8  0E1A               	movlw	26
   549  007EFA  6E03               	movwf	??_function_set^0,c
   550  007EFC  0EF8               	movlw	248
   551  007EFE                     u97:
   552  007EFE  2EE8               	decfsz	wreg,f,c
   553  007F00  D7FE               	bra	u97
   554  007F02  2E03               	decfsz	??_function_set^0,f,c
   555  007F04  D7FC               	bra	u97
   556  007F06  D000               	nop2	
   557  007F08                     
   558                           ;main.c: 83: 
   559  007F08  C006  F003         	movff	function_set@data_lenght,??_function_set
   560  007F0C  0E02               	movlw	2
   561  007F0E  1203               	iorwf	??_function_set^0,f,c
   562  007F10  C007  FFD9         	movff	_lcd,fsr2l
   563  007F14  C008  FFDA         	movff	_lcd+1,fsr2h
   564  007F18  3A03               	swapf	??_function_set^0,f,c
   565  007F1A  50DF               	movf	indf2,w,c
   566  007F1C  1803               	xorwf	??_function_set^0,w,c
   567  007F1E  0B0F               	andlw	-241
   568  007F20  1803               	xorwf	??_function_set^0,w,c
   569  007F22  6EDF               	movwf	indf2,c
   570  007F24                     
   571                           ;main.c: 84: 
   572  007F24  0E06               	movlw	6
   573  007F26  6E03               	movwf	??_function_set^0,c
   574  007F28  0E30               	movlw	48
   575  007F2A                     u107:
   576  007F2A  2EE8               	decfsz	wreg,f,c
   577  007F2C  D7FE               	bra	u107
   578  007F2E  2E03               	decfsz	??_function_set^0,f,c
   579  007F30  D7FC               	bra	u107
   580  007F32  D000               	nop2	
   581  007F34                     
   582                           ;main.c: 87: 
   583  007F34  C007  FFD9         	movff	_lcd,fsr2l
   584  007F38  C008  FFDA         	movff	_lcd+1,fsr2h
   585  007F3C  84DF               	bsf	indf2,2,c
   586  007F3E                     
   587                           ;main.c: 88: 
   588  007F3E  0E06               	movlw	6
   589  007F40  6E03               	movwf	??_function_set^0,c
   590  007F42  0E30               	movlw	48
   591  007F44                     u117:
   592  007F44  2EE8               	decfsz	wreg,f,c
   593  007F46  D7FE               	bra	u117
   594  007F48  2E03               	decfsz	??_function_set^0,f,c
   595  007F4A  D7FC               	bra	u117
   596  007F4C  D000               	nop2	
   597  007F4E                     
   598                           ;main.c: 91: 
   599  007F4E  C007  FFD9         	movff	_lcd,fsr2l
   600  007F52  C008  FFDA         	movff	_lcd+1,fsr2h
   601  007F56  94DF               	bcf	indf2,2,c
   602  007F58                     
   603                           ;main.c: 92: 
   604  007F58  0E1A               	movlw	26
   605  007F5A  6E03               	movwf	??_function_set^0,c
   606  007F5C  0EF8               	movlw	248
   607  007F5E                     u127:
   608  007F5E  2EE8               	decfsz	wreg,f,c
   609  007F60  D7FE               	bra	u127
   610  007F62  2E03               	decfsz	??_function_set^0,f,c
   611  007F64  D7FC               	bra	u127
   612  007F66  D000               	nop2	
   613  007F68                     
   614                           ;main.c: 93:     lcd->E = 0;
   615  007F68  C007  FFD9         	movff	_lcd,fsr2l
   616  007F6C  C008  FFDA         	movff	_lcd+1,fsr2h
   617  007F70  0E0F               	movlw	-241
   618  007F72  16DF               	andwf	indf2,f,c
   619  007F74                     
   620                           ;main.c: 98: 
   621  007F74  C007  FFD9         	movff	_lcd,fsr2l
   622  007F78  C008  FFDA         	movff	_lcd+1,fsr2h
   623  007F7C  38DF               	swapf	indf2,w,c
   624  007F7E  0B0F               	andlw	15
   625  007F80  6E03               	movwf	??_function_set^0,c
   626  007F82  C002  F004         	movff	function_set@char_font,??_function_set+1
   627  007F86  90D8               	bcf	status,0,c
   628  007F88  3604               	rlcf	(??_function_set+1)^0,f,c
   629  007F8A  90D8               	bcf	status,0,c
   630  007F8C  3604               	rlcf	(??_function_set+1)^0,f,c
   631  007F8E  3801               	swapf	function_set@num_lines^0,w,c
   632  007F90  42E8               	rrncf	wreg,f,c
   633  007F92  0BF8               	andlw	248
   634  007F94  1004               	iorwf	(??_function_set+1)^0,w,c
   635  007F96  1003               	iorwf	??_function_set^0,w,c
   636  007F98  6E05               	movwf	(??_function_set+2)^0,c
   637  007F9A  C007  FFD9         	movff	_lcd,fsr2l
   638  007F9E  C008  FFDA         	movff	_lcd+1,fsr2h
   639  007FA2  3A05               	swapf	(??_function_set+2)^0,f,c
   640  007FA4  50DF               	movf	indf2,w,c
   641  007FA6  1805               	xorwf	(??_function_set+2)^0,w,c
   642  007FA8  0B0F               	andlw	-241
   643  007FAA  1805               	xorwf	(??_function_set+2)^0,w,c
   644  007FAC  6EDF               	movwf	indf2,c
   645  007FAE                     
   646                           ;main.c: 99: void display_onoff_control(char display_on, char cursor_on, char blink){
   647  007FAE  0E06               	movlw	6
   648  007FB0  6E03               	movwf	??_function_set^0,c
   649  007FB2  0E30               	movlw	48
   650  007FB4                     u137:
   651  007FB4  2EE8               	decfsz	wreg,f,c
   652  007FB6  D7FE               	bra	u137
   653  007FB8  2E03               	decfsz	??_function_set^0,f,c
   654  007FBA  D7FC               	bra	u137
   655  007FBC  D000               	nop2	
   656  007FBE                     
   657                           ;main.c: 102:     lcd->R_W = 0;
   658  007FBE  C007  FFD9         	movff	_lcd,fsr2l
   659  007FC2  C008  FFDA         	movff	_lcd+1,fsr2h
   660  007FC6  84DF               	bsf	indf2,2,c
   661                           
   662                           ;main.c: 103: 
   663  007FC8  0E06               	movlw	6
   664  007FCA  6E03               	movwf	??_function_set^0,c
   665  007FCC  0E30               	movlw	48
   666  007FCE                     u147:
   667  007FCE  2EE8               	decfsz	wreg,f,c
   668  007FD0  D7FE               	bra	u147
   669  007FD2  2E03               	decfsz	??_function_set^0,f,c
   670  007FD4  D7FC               	bra	u147
   671  007FD6  D000               	nop2	
   672  007FD8                     
   673                           ;main.c: 106: 
   674  007FD8  C007  FFD9         	movff	_lcd,fsr2l
   675  007FDC  C008  FFDA         	movff	_lcd+1,fsr2h
   676  007FE0  94DF               	bcf	indf2,2,c
   677  007FE2                     
   678                           ;main.c: 107: 
   679  007FE2  0E1A               	movlw	26
   680  007FE4  6E03               	movwf	??_function_set^0,c
   681  007FE6  0EF8               	movlw	248
   682  007FE8                     u157:
   683  007FE8  2EE8               	decfsz	wreg,f,c
   684  007FEA  D7FE               	bra	u157
   685  007FEC  2E03               	decfsz	??_function_set^0,f,c
   686  007FEE  D7FC               	bra	u157
   687  007FF0  D000               	nop2	
   688  007FF2                     
   689                           ;main.c: 108:     lcd->E = 1;
   690  007FF2  C007  FFD9         	movff	_lcd,fsr2l
   691  007FF6  C008  FFDA         	movff	_lcd+1,fsr2h
   692  007FFA  0E0F               	movlw	-241
   693  007FFC  16DF               	andwf	indf2,f,c
   694  007FFE  0012               	return		;funcret
   695  008000                     __end_of_function_set:
   696                           	opt callstack 0
   697                           
   698 ;; *************** function _entry_mode_set *****************
   699 ;; Defined at:
   700 ;;		line 145 in file "main.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;  move_directi    1    wreg     unsigned char 
   703 ;;  display_shif    1    0[COMRAM] unsigned char 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  move_directi    1    2[COMRAM] unsigned char 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   715 ;;      Params:         1       0       0       0       0       0       0
   716 ;;      Locals:         1       0       0       0       0       0       0
   717 ;;      Temps:          1       0       0       0       0       0       0
   718 ;;      Totals:         3       0       0       0       0       0       0
   719 ;;Total ram usage:        3 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_main
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           	psect	text4
   729  007BD0                     __ptext4:
   730                           	opt callstack 0
   731  007BD0                     _entry_mode_set:
   732                           	opt callstack 30
   733                           
   734                           ;incstack = 0
   735                           ;entry_mode_set@move_direction stored from wreg
   736  007BD0  6E03               	movwf	entry_mode_set@move_direction^0,c
   737  007BD2                     
   738                           ;main.c: 146:     _delay((unsigned long)((5)*(16000000/4000.0)));
   739  007BD2  C007  FFD9         	movff	_lcd,fsr2l
   740  007BD6  C008  FFDA         	movff	_lcd+1,fsr2h
   741  007BDA  94DF               	bcf	indf2,2,c
   742                           
   743                           ;main.c: 147: 
   744  007BDC  C007  FFD9         	movff	_lcd,fsr2l
   745  007BE0  C008  FFDA         	movff	_lcd+1,fsr2h
   746  007BE4  90DF               	bcf	indf2,0,c
   747                           
   748                           ;main.c: 148: 
   749  007BE6  C007  FFD9         	movff	_lcd,fsr2l
   750  007BEA  C008  FFDA         	movff	_lcd+1,fsr2h
   751  007BEE  92DF               	bcf	indf2,1,c
   752  007BF0                     
   753                           ;main.c: 150:     _delay((unsigned long)((1)*(16000000/4000.0)));
   754  007BF0  C007  FFD9         	movff	_lcd,fsr2l
   755  007BF4  C008  FFDA         	movff	_lcd+1,fsr2h
   756  007BF8  0E0F               	movlw	-241
   757  007BFA  16DF               	andwf	indf2,f,c
   758  007BFC                     
   759                           ;main.c: 151: 
   760  007BFC  0E06               	movlw	6
   761  007BFE  6E02               	movwf	??_entry_mode_set^0,c
   762  007C00  0E30               	movlw	48
   763  007C02                     u167:
   764  007C02  2EE8               	decfsz	wreg,f,c
   765  007C04  D7FE               	bra	u167
   766  007C06  2E02               	decfsz	??_entry_mode_set^0,f,c
   767  007C08  D7FC               	bra	u167
   768  007C0A  D000               	nop2	
   769  007C0C                     
   770                           ;main.c: 154:     _delay((unsigned long)((1)*(16000000/4000.0)));
   771  007C0C  C007  FFD9         	movff	_lcd,fsr2l
   772  007C10  C008  FFDA         	movff	_lcd+1,fsr2h
   773  007C14  84DF               	bsf	indf2,2,c
   774  007C16                     
   775                           ;main.c: 155: 
   776  007C16  0E06               	movlw	6
   777  007C18  6E02               	movwf	??_entry_mode_set^0,c
   778  007C1A  0E30               	movlw	48
   779  007C1C                     u177:
   780  007C1C  2EE8               	decfsz	wreg,f,c
   781  007C1E  D7FE               	bra	u177
   782  007C20  2E02               	decfsz	??_entry_mode_set^0,f,c
   783  007C22  D7FC               	bra	u177
   784  007C24  D000               	nop2	
   785  007C26                     
   786                           ;main.c: 158:     lcd->data = 0x00;
   787  007C26  C007  FFD9         	movff	_lcd,fsr2l
   788  007C2A  C008  FFDA         	movff	_lcd+1,fsr2h
   789  007C2E  94DF               	bcf	indf2,2,c
   790  007C30                     
   791                           ;main.c: 159:     _delay((unsigned long)((5)*(16000000/4000.0)));
   792  007C30  0E1A               	movlw	26
   793  007C32  6E02               	movwf	??_entry_mode_set^0,c
   794  007C34  0EF8               	movlw	248
   795  007C36                     u187:
   796  007C36  2EE8               	decfsz	wreg,f,c
   797  007C38  D7FE               	bra	u187
   798  007C3A  2E02               	decfsz	??_entry_mode_set^0,f,c
   799  007C3C  D7FC               	bra	u187
   800  007C3E  D000               	nop2	
   801  007C40                     
   802                           ;main.c: 162: 
   803  007C40  5003               	movf	entry_mode_set@move_direction^0,w,c
   804  007C42  2403               	addwf	entry_mode_set@move_direction^0,w,c
   805  007C44  1001               	iorwf	entry_mode_set@display_shift^0,w,c
   806  007C46  6E02               	movwf	??_entry_mode_set^0,c
   807  007C48  0E04               	movlw	4
   808  007C4A  1202               	iorwf	??_entry_mode_set^0,f,c
   809  007C4C  C007  FFD9         	movff	_lcd,fsr2l
   810  007C50  C008  FFDA         	movff	_lcd+1,fsr2h
   811  007C54  3A02               	swapf	??_entry_mode_set^0,f,c
   812  007C56  50DF               	movf	indf2,w,c
   813  007C58  1802               	xorwf	??_entry_mode_set^0,w,c
   814  007C5A  0B0F               	andlw	-241
   815  007C5C  1802               	xorwf	??_entry_mode_set^0,w,c
   816  007C5E  6EDF               	movwf	indf2,c
   817  007C60                     
   818                           ;main.c: 163: void init_lcd(){
   819  007C60  0E06               	movlw	6
   820  007C62  6E02               	movwf	??_entry_mode_set^0,c
   821  007C64  0E30               	movlw	48
   822  007C66                     u197:
   823  007C66  2EE8               	decfsz	wreg,f,c
   824  007C68  D7FE               	bra	u197
   825  007C6A  2E02               	decfsz	??_entry_mode_set^0,f,c
   826  007C6C  D7FC               	bra	u197
   827  007C6E  D000               	nop2	
   828  007C70                     
   829                           ;main.c: 166: 
   830  007C70  C007  FFD9         	movff	_lcd,fsr2l
   831  007C74  C008  FFDA         	movff	_lcd+1,fsr2h
   832  007C78  84DF               	bsf	indf2,2,c
   833  007C7A                     
   834                           ;main.c: 167: void goto_XY(char x, char y){
   835  007C7A  0E06               	movlw	6
   836  007C7C  6E02               	movwf	??_entry_mode_set^0,c
   837  007C7E  0E30               	movlw	48
   838  007C80                     u207:
   839  007C80  2EE8               	decfsz	wreg,f,c
   840  007C82  D7FE               	bra	u207
   841  007C84  2E02               	decfsz	??_entry_mode_set^0,f,c
   842  007C86  D7FC               	bra	u207
   843  007C88  D000               	nop2	
   844  007C8A                     
   845                           ;main.c: 170: 
   846  007C8A  C007  FFD9         	movff	_lcd,fsr2l
   847  007C8E  C008  FFDA         	movff	_lcd+1,fsr2h
   848  007C92  94DF               	bcf	indf2,2,c
   849  007C94                     
   850                           ;main.c: 171: void write_char(char c){
   851  007C94  C007  FFD9         	movff	_lcd,fsr2l
   852  007C98  C008  FFDA         	movff	_lcd+1,fsr2h
   853  007C9C  0E0F               	movlw	-241
   854  007C9E  16DF               	andwf	indf2,f,c
   855  007CA0                     
   856                           ;main.c: 172:     lcd->E = 0;
   857  007CA0  0E1A               	movlw	26
   858  007CA2  6E02               	movwf	??_entry_mode_set^0,c
   859  007CA4  0EF8               	movlw	248
   860  007CA6                     u217:
   861  007CA6  2EE8               	decfsz	wreg,f,c
   862  007CA8  D7FE               	bra	u217
   863  007CAA  2E02               	decfsz	??_entry_mode_set^0,f,c
   864  007CAC  D7FC               	bra	u217
   865  007CAE  D000               	nop2	
   866  007CB0  0012               	return		;funcret
   867  007CB2                     __end_of_entry_mode_set:
   868                           	opt callstack 0
   869                           
   870 ;; *************** function _display_onoff_control *****************
   871 ;; Defined at:
   872 ;;		line 112 in file "main.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  display_on      1    wreg     unsigned char 
   875 ;;  cursor_on       1    0[COMRAM] unsigned char 
   876 ;;  blink           1    1[COMRAM] unsigned char 
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  display_on      1    4[COMRAM] unsigned char 
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   888 ;;      Params:         2       0       0       0       0       0       0
   889 ;;      Locals:         1       0       0       0       0       0       0
   890 ;;      Temps:          2       0       0       0       0       0       0
   891 ;;      Totals:         5       0       0       0       0       0       0
   892 ;;Total ram usage:        5 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; This function calls:
   895 ;;		Nothing
   896 ;; This function is called by:
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text5
   902  007CB2                     __ptext5:
   903                           	opt callstack 0
   904  007CB2                     _display_onoff_control:
   905                           	opt callstack 30
   906                           
   907                           ;incstack = 0
   908                           ;display_onoff_control@display_on stored from wreg
   909  007CB2  6E05               	movwf	display_onoff_control@display_on^0,c
   910  007CB4                     
   911                           ;main.c: 113:     _delay((unsigned long)((5)*(16000000/4000.0)));
   912  007CB4  C007  FFD9         	movff	_lcd,fsr2l
   913  007CB8  C008  FFDA         	movff	_lcd+1,fsr2h
   914  007CBC  94DF               	bcf	indf2,2,c
   915                           
   916                           ;main.c: 114: 
   917  007CBE  C007  FFD9         	movff	_lcd,fsr2l
   918  007CC2  C008  FFDA         	movff	_lcd+1,fsr2h
   919  007CC6  90DF               	bcf	indf2,0,c
   920                           
   921                           ;main.c: 115: 
   922  007CC8  C007  FFD9         	movff	_lcd,fsr2l
   923  007CCC  C008  FFDA         	movff	_lcd+1,fsr2h
   924  007CD0  92DF               	bcf	indf2,1,c
   925  007CD2                     
   926                           ;main.c: 117: 
   927  007CD2  C007  FFD9         	movff	_lcd,fsr2l
   928  007CD6  C008  FFDA         	movff	_lcd+1,fsr2h
   929  007CDA  0E0F               	movlw	-241
   930  007CDC  16DF               	andwf	indf2,f,c
   931  007CDE                     
   932                           ;main.c: 118:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
   933  007CDE  0E06               	movlw	6
   934  007CE0  6E03               	movwf	??_display_onoff_control^0,c
   935  007CE2  0E30               	movlw	48
   936  007CE4                     u227:
   937  007CE4  2EE8               	decfsz	wreg,f,c
   938  007CE6  D7FE               	bra	u227
   939  007CE8  2E03               	decfsz	??_display_onoff_control^0,f,c
   940  007CEA  D7FC               	bra	u227
   941  007CEC  D000               	nop2	
   942  007CEE                     
   943                           ;main.c: 121: 
   944  007CEE  C007  FFD9         	movff	_lcd,fsr2l
   945  007CF2  C008  FFDA         	movff	_lcd+1,fsr2h
   946  007CF6  84DF               	bsf	indf2,2,c
   947  007CF8                     
   948                           ;main.c: 122:     lcd->E = 1;
   949  007CF8  0E06               	movlw	6
   950  007CFA  6E03               	movwf	??_display_onoff_control^0,c
   951  007CFC  0E30               	movlw	48
   952  007CFE                     u237:
   953  007CFE  2EE8               	decfsz	wreg,f,c
   954  007D00  D7FE               	bra	u237
   955  007D02  2E03               	decfsz	??_display_onoff_control^0,f,c
   956  007D04  D7FC               	bra	u237
   957  007D06  D000               	nop2	
   958  007D08                     
   959                           ;main.c: 125: 
   960  007D08  C007  FFD9         	movff	_lcd,fsr2l
   961  007D0C  C008  FFDA         	movff	_lcd+1,fsr2h
   962  007D10  94DF               	bcf	indf2,2,c
   963  007D12                     
   964                           ;main.c: 126:     lcd->E = 0;
   965  007D12  0E1A               	movlw	26
   966  007D14  6E03               	movwf	??_display_onoff_control^0,c
   967  007D16  0EF8               	movlw	248
   968  007D18                     u247:
   969  007D18  2EE8               	decfsz	wreg,f,c
   970  007D1A  D7FE               	bra	u247
   971  007D1C  2E03               	decfsz	??_display_onoff_control^0,f,c
   972  007D1E  D7FC               	bra	u247
   973  007D20  D000               	nop2	
   974  007D22                     
   975                           ;main.c: 131: 
   976  007D22  90D8               	bcf	status,0,c
   977  007D24  3401               	rlcf	display_onoff_control@cursor_on^0,w,c
   978  007D26  6E03               	movwf	??_display_onoff_control^0,c
   979  007D28  4405               	rlncf	display_onoff_control@display_on^0,w,c
   980  007D2A  46E8               	rlncf	wreg,f,c
   981  007D2C  0BFC               	andlw	252
   982  007D2E  1003               	iorwf	??_display_onoff_control^0,w,c
   983  007D30  1002               	iorwf	display_onoff_control@blink^0,w,c
   984  007D32  6E04               	movwf	(??_display_onoff_control+1)^0,c
   985  007D34  0E08               	movlw	8
   986  007D36  1204               	iorwf	(??_display_onoff_control+1)^0,f,c
   987  007D38  C007  FFD9         	movff	_lcd,fsr2l
   988  007D3C  C008  FFDA         	movff	_lcd+1,fsr2h
   989  007D40  3A04               	swapf	(??_display_onoff_control+1)^0,f,c
   990  007D42  50DF               	movf	indf2,w,c
   991  007D44  1804               	xorwf	(??_display_onoff_control+1)^0,w,c
   992  007D46  0B0F               	andlw	-241
   993  007D48  1804               	xorwf	(??_display_onoff_control+1)^0,w,c
   994  007D4A  6EDF               	movwf	indf2,c
   995  007D4C                     
   996                           ;main.c: 132: void entry_mode_set(char move_direction, char display_shift){
   997  007D4C  0E06               	movlw	6
   998  007D4E  6E03               	movwf	??_display_onoff_control^0,c
   999  007D50  0E30               	movlw	48
  1000  007D52                     u257:
  1001  007D52  2EE8               	decfsz	wreg,f,c
  1002  007D54  D7FE               	bra	u257
  1003  007D56  2E03               	decfsz	??_display_onoff_control^0,f,c
  1004  007D58  D7FC               	bra	u257
  1005  007D5A  D000               	nop2	
  1006  007D5C                     
  1007                           ;main.c: 135:     lcd->R_W = 0;
  1008  007D5C  C007  FFD9         	movff	_lcd,fsr2l
  1009  007D60  C008  FFDA         	movff	_lcd+1,fsr2h
  1010  007D64  84DF               	bsf	indf2,2,c
  1011  007D66                     
  1012                           ;main.c: 136: 
  1013  007D66  0E06               	movlw	6
  1014  007D68  6E03               	movwf	??_display_onoff_control^0,c
  1015  007D6A  0E30               	movlw	48
  1016  007D6C                     u267:
  1017  007D6C  2EE8               	decfsz	wreg,f,c
  1018  007D6E  D7FE               	bra	u267
  1019  007D70  2E03               	decfsz	??_display_onoff_control^0,f,c
  1020  007D72  D7FC               	bra	u267
  1021  007D74  D000               	nop2	
  1022  007D76                     
  1023                           ;main.c: 139: 
  1024  007D76  C007  FFD9         	movff	_lcd,fsr2l
  1025  007D7A  C008  FFDA         	movff	_lcd+1,fsr2h
  1026  007D7E  94DF               	bcf	indf2,2,c
  1027  007D80                     
  1028                           ;main.c: 140: 
  1029  007D80  0E1A               	movlw	26
  1030  007D82  6E03               	movwf	??_display_onoff_control^0,c
  1031  007D84  0EF8               	movlw	248
  1032  007D86                     u277:
  1033  007D86  2EE8               	decfsz	wreg,f,c
  1034  007D88  D7FE               	bra	u277
  1035  007D8A  2E03               	decfsz	??_display_onoff_control^0,f,c
  1036  007D8C  D7FC               	bra	u277
  1037  007D8E  D000               	nop2	
  1038  007D90                     
  1039                           ;main.c: 141:     lcd->E = 1;
  1040  007D90  C007  FFD9         	movff	_lcd,fsr2l
  1041  007D94  C008  FFDA         	movff	_lcd+1,fsr2h
  1042  007D98  0E0F               	movlw	-241
  1043  007D9A  16DF               	andwf	indf2,f,c
  1044  007D9C  0012               	return		;funcret
  1045  007D9E                     __end_of_display_onoff_control:
  1046                           	opt callstack 0
  1047  0000                     
  1048                           	psect	rparam
  1049  0000                     tosu	equ	0xFFF
  1050                           tosh	equ	0xFFE
  1051                           tosl	equ	0xFFD
  1052                           stkptr	equ	0xFFC
  1053                           pclatu	equ	0xFFB
  1054                           pclath	equ	0xFFA
  1055                           pcl	equ	0xFF9
  1056                           tblptru	equ	0xFF8
  1057                           tblptrh	equ	0xFF7
  1058                           tblptrl	equ	0xFF6
  1059                           tablat	equ	0xFF5
  1060                           prodh	equ	0xFF4
  1061                           prodl	equ	0xFF3
  1062                           indf0	equ	0xFEF
  1063                           postinc0	equ	0xFEE
  1064                           postdec0	equ	0xFED
  1065                           preinc0	equ	0xFEC
  1066                           plusw0	equ	0xFEB
  1067                           fsr0h	equ	0xFEA
  1068                           fsr0l	equ	0xFE9
  1069                           wreg	equ	0xFE8
  1070                           indf1	equ	0xFE7
  1071                           postinc1	equ	0xFE6
  1072                           postdec1	equ	0xFE5
  1073                           preinc1	equ	0xFE4
  1074                           plusw1	equ	0xFE3
  1075                           fsr1h	equ	0xFE2
  1076                           fsr1l	equ	0xFE1
  1077                           bsr	equ	0xFE0
  1078                           indf2	equ	0xFDF
  1079                           postinc2	equ	0xFDE
  1080                           postdec2	equ	0xFDD
  1081                           preinc2	equ	0xFDC
  1082                           plusw2	equ	0xFDB
  1083                           fsr2h	equ	0xFDA
  1084                           fsr2l	equ	0xFD9
  1085                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      6       8
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_function_set

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     586
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                           _init_lcd
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _write_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _function_set                                         6     4      2     218
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       3     2      1     120
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                5     3      2     218
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
   _entry_mode_set
   _function_set
   _init_lcd
   _write_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      6       8       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       8       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       8      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri May 01 16:00:59 2020

         ?_display_onoff_control 0001                               l31 7FFE  
                             l40 7B52                               l25 7BC8  
                             l34 7D9C                               l26 7BC8  
                             l37 7CB0                               l46 7E92  
                             u17 7DE2                               u27 7DFC  
                             u37 7E16                               u47 7E3E  
                             u57 7E58                               u67 7E88  
                             u77 7ECA                               u87 7EE4  
                             u97 7EFE                      __CFG_OSC$HS 000000  
                            l722 7B4A                              l900 7F3E  
                            l820 7DA0                              l910 7FAE  
                            l902 7F4E                              l830 7E06  
                            l822 7DBE                              l920 7CB4  
                            l912 7FBE                              l904 7F58  
                            l840 7E62                              l832 7E10  
                            l824 7DDC                              l930 7D08  
                            l922 7CD2                              l914 7FD8  
                            l906 7F68                              l842 7E6C  
                            l834 7E20                              l826 7DEC  
                            l940 7D66                              l932 7D12  
                            l924 7CDE                              l916 7FE2  
                            l908 7F74                              l844 7E76  
                            l836 7E38                              l828 7DF6  
                            l942 7D76                              l934 7D22  
                            l926 7CEE                              l950 7BF0  
                            l918 7FF2                              l846 7E82  
                            l838 7E52                              l944 7D80  
                            l936 7D4C                              l928 7CF8  
                            l960 7C30                              l952 7BFC  
                            l880 7E96                              l946 7D90  
                            l938 7D5C                              l970 7C8A  
                            l962 7C40                              l954 7C0C  
                            l890 7EEE                              l882 7EB4  
                            l972 7C94                              l964 7C60  
                            l956 7C16                              l948 7BD2  
                            l892 7EF8                              l884 7EC4  
                            l980 7B60                              l974 7CA0  
                            l966 7C70                              l958 7C26  
                            l894 7F08                              l886 7ED4  
                            l990 7B92                              l982 7B6E  
                            l968 7C7A                              l896 7F24  
                            l888 7EDE                              l992 7B98  
                            l984 7B7C                              l976 7B54  
                            l898 7F34                              l994 7B9E  
                            l986 7B86                              l978 7B5C  
                            l996 7BA4                              l988 7B8C  
                            l998 7BAA                              u107 7F2A  
                            u117 7F44                              u207 7C80  
                            u127 7F5E                              u217 7CA6  
                            u137 7FB4                              u227 7CE4  
                            u147 7FCE                              u237 7CFE  
                            u157 7FE8                              u247 7D18  
                            u167 7C02                              u257 7D52  
                            u177 7C1C                              u267 7D6C  
                            u187 7C36                              u277 7D86  
                            u197 7C66                              _lcd 0007  
                            wreg 000FE8                     __CFG_WDT$OFF 000000  
                           l1000 7BB0                             l1002 7BB6  
                           l1004 7BBC                             l1006 7BC2  
                           _main 7B54                             fsr2h 000FDA  
                           indf2 000FDF                             fsr2l 000FD9  
                           start 0000            function_set@num_lines 0001  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                          ?_main 0001                            _PORTD 000F83  
                          _TRISD 000F95                            status 000FD8  
                __initialization 7B44                     __end_of_main 7BD0  
                         ??_main 0007                    __activetblptr 000000  
                         _ADCON1 000FC1                 __end_of_init_lcd 7B54  
                  ?_function_set 0001                       __accesstop 0080  
        __end_of__initialization 7B44                    ___rparam_used 000001  
        ??_display_onoff_control 0003                   __pcstackCOMRAM 0001  
                 ??_function_set 0003                       __pnvCOMRAM 0007  
    entry_mode_set@display_shift 0001                        ?_init_lcd 0001  
        __size_of_entry_mode_set 00E2                          __Hparam 0000  
 display_onoff_control@cursor_on 0001                          __Lparam 0000  
                        __pcinit 7B44                          __ramtop 0600  
                        __ptext0 7B54                          __ptext1 7D9E  
                        __ptext2 7B4A                          __ptext3 7E94  
                        __ptext4 7BD0                          __ptext5 7CB2  
           end_of_initialization 7B44             __end_of_function_set 8000  
                     ??_init_lcd 0001   __size_of_display_onoff_control 00EC  
  __end_of_display_onoff_control 7D9E                       _write_char 7D9E  
            start_initialization 7B44                   _entry_mode_set 7BD0  
          __size_of_function_set 016C           __end_of_entry_mode_set 7CB2  
              __size_of_init_lcd 000A                      ?_write_char 0001  
                   _function_set 7E94                  ?_entry_mode_set 0001  
   entry_mode_set@move_direction 0003  display_onoff_control@display_on 0005  
     display_onoff_control@blink 0002                      write_char@c 0002  
            __size_of_write_char 00F6                         __Hrparam 0000  
                       __Lrparam 0000                         _init_lcd 7B4A  
                  __size_of_main 007C            _display_onoff_control 7CB2  
        function_set@data_lenght 0006                     ??_write_char 0001  
               ??_entry_mode_set 0002            function_set@char_font 0002  
             __end_of_write_char 7E94  
